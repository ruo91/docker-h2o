#------------------------------------------------------
# Title: H2O config file
# Docs: https://h2o.examp1e.net/configure.html
#------------------------------------------------------
# Maintainer: Yongbok Kim (ruo91@yongbok.net)
#------------------------------------------------------
### Base Directives ###
# Listen (global, host)
# https://h2o.examp1e.net/configure/base_directives.html#listen
# Specifies the port at which the server should listen to.
listen: 80

# User (global)
# https://h2o.examp1e.net/configure/base_directives.html#user
# Username under which the server should handle incoming requests.
# If the directive is omitted and if the server is started under root privileges, the server will attempt to setuid to nobody.
user: nobody

# PID (global)
# https://h2o.examp1e.net/configure/base_directives.html#pid-file
# Name of the file to which the process id of the server should be written.
pid-file: /etc/h2o/run/h2o.pid

# error log (global)
# https://h2o.examp1e.net/configure/base_directives.html#error-log
error-log: /etc/h2o/logs/h2o-error.log

# max connections (global)
# https://h2o.examp1e.net/configure/base_directives.html#max-connections
# Number of connections to handle at once at maximum.
max-connections: 1024

# max delegations (global)
# https://h2o.examp1e.net/configure/base_directives.html#max-delegations
# Limits the number of delegations (i.e. internal redirects using the X-Reproxy-URL header).
max-delegations: 5

# num name resolution threads (global)
# https://h2o.examp1e.net/configure/base_directives.html#num-name-resolution-threads
# Number of threads to run for name resolution.
num-name-resolution-threads: 32

### HTTP/1 Directives ###
# https://h2o.examp1e.net/configure/http1_directives.html
# http1 request timeout (global)
# Timeout for incoming requests in seconds.
http1-request-timeout: 10

# http1 upgrade to http2 (global)
# Boolean flag (ON or OFF) indicating whether or not to allow upgrade to HTTP/2.
http1-upgrade-to-http2: ON

### HTTP/2 Directives ###
# https://h2o.examp1e.net/configure/http2_directives.html
# Timeout for idle connections in seconds.
http2-idle-timeout: 10

# Maximum number of requests to be handled concurrently within a single HTTP/2 connection.
# The value cannot exceed 256.
http2-max-concurrent-requests-per-connection: 256

# http2 reprioritize blocking assets
# https://h2o.examp1e.net/configure/http2_directives.html#http2-reprioritize-blocking-assets
# A boolean flag (ON or OFF) indicating if the server should send CSS and JS files above anything else.
# This option has a positive impact on first-paint time on Google Chrome.
# For more information please refer to http://blog.kazuhooku.com/2015/06/http2-and-h2o-improves-user-experience.html
http2-reprioritize-blocking-assets: ON

### Expires Directives ###
# Expires (global, host, path)
# https://h2o.examp1e.net/configure/expires_directives.html
# expires: 1 second
# expires: 1 minute
# expires: 1 hour
# expires: 1 day
# expires: 1 month
expires: 1 year

### File Directives ###
# Index (global, host, path)
# https://h2o.examp1e.net/configure/file_directives.html#file.index
# Specifies the names of the files that should be served when the client sends a request against the directory.
file.index: [ 'index.html', 'index.htm', 'index.php' ]

# etag (global, host, path)
# https://h2o.examp1e.net/configure/file_directives.html#file.etag
# A boolean flag (OFF, or ON) specifying whether or not to send etags.
file.etag: ON

# Send Gzip (global, host, path)
# https://h2o.examp1e.net/configure/file_directives.html#file.send-gzip
# A boolean flag (ON or OFF) indicating whether or not so send .gz variants if possible.
# If set to ON, the handler looks for a file with .gz appended and sends the file
# (i.e. sends the contents of index.html.gz in place of index.html) if the client is capable of transparently decoding a gzipped response.
file.send-gzip: ON

# Dirlisting (global, host, path)
# https://h2o.examp1e.net/configure/file_directives.html#file.dirlisting
# A boolean flag (OFF, or ON) specifying whether or not to send the directory listing in case none of the index files exist.
file.dirlisting: OFF

### Headers Directives ###
# header add (global, host, path)
# https://h2o.examp1e.net/configure/headers_directives.html#header.add
# Adds a new header line to the response headers, regardless if a header with the same name already exists.

## List of useful HTTP headers ##
# https://www.owasp.org/index.php/List_of_useful_HTTP_headers
# This offers significantly faster and cheaper method for at least partial mitigation of existing issues,
# and an additional layer of defense for new applications.
#
# 1. Content-Security-Policy
# http://www.w3.org/TR/CSP/#policy-delivery
header.add: "Content-Security-Policy: script-src self https://apis.google.com https://ajax.cloudflare.com"

# 2. X-Frame-Options
# https://developer.mozilla.org/en-US/docs/Web/HTTP/X-Frame-Options
header.add: "X-Frame-Options: SAMEORIGIN"

# 3. HTTP Strict-Transport-Security
# https://developer.mozilla.org/en-US/docs/Web/Security/HTTP_strict_transport_security
header.add: "Strict-Transport-Security: max-age=31536000; includeSubDomains; preload"

# header set (global, host, path)
# https://h2o.examp1e.net/configure/headers_directives.html#header.set
# Sets a header line, removing headers with the same name if exists.
# 4. X-Content-Type-Options
header.set: "X-Content-Type-Options: nosniff"

# header merge (global, host, path)
# https://h2o.examp1e.net/configure/headers_directives.html#header.merge
# Adds a new header line, or merges the value to the existing header of comma-separated values.
# The following example sets the must-revalidate attribute of the Cache-Control header when and only when the attribute is not yet being set.
header.merge: "Cache-Control: must-revalidate"

# header unset (global, host, path)
# https://h2o.examp1e.net/configure/headers_directives.html#header.unset
# Removes headers with given name.
header.unset: "X-Powered-By"

### FastCGI Directives ###
# Keepalive
# https://h2o.examp1e.net/configure/fastcgi_directives.html#fastcgi.timeout.keepalive
# Sets the keepl-alive timeout for idle connections in milliseconds.
# FastCGI connections will not be persistent if the value is set to zero (default).
fastcgi.timeout.keepalive: 5000

# Send delegated uri (global, host, path, extension)
# https://h2o.examp1e.net/configure/fastcgi_directives.html#fastcgi.send-delegated-uri
# Send the modified HTTP_HOST and REQUEST_URI being rewritten in case of internal redirect.
# In H2O, it is possible to perform internal redirects (a.k.a. delegations or URL rewrites) using the redirect directive or by returning X-Reproxy-URL headers from web applications.
# The directive specifies whether to send the original values to the FastCGI process (default), or if the rewritten values should be sent.
fastcgi.send-delegated-uri: OFF

# FastCGI Spawn (path, extension)
# https://h2o.examp1e.net/configure/fastcgi_directives.html#fastcgi.spawn
#file.custom-handler:
#  extension: .php
#  fastcgi.spawn: "exec php-cgi"

### Vhosts ###
# localhost
hosts:
  "localhost":
    listen:
      port: 80
    paths:
      "/":
        ### Redirect Directives ###
        # redirect (path)
        # https://h2o.examp1e.net/configure/redirect_directives.html#redirect
        # Redirects the requests to given URL.
        # If the argument is a scalar, the value is considered as the URL to where the requests should be redirected.
        # If the argument is a mapping, the url property is considered the URL, and the status property indicates the status code to be used for the redirect response.
        # The directive rewrites the URL by replacing the host and path part of the URL at which the directive is used with the given URL.
        # For example, when using the configuration below, requests to http://example.com/abc.html will be redirected to https://example.com/abc.html.
        redirect:
          status: 301
          url: https://localhost/

  "localhost:443":
    listen:
      port: 443
      ssl:
        # Generate a key, csr, crt with openssl
        # [root@localhost ~]# openssl genrsa -out /etc/h2o/ssl/localhost.key 2048
        # [root@localhost ~]# openssl req -new -sha256 -key /etc/h2o/ssl/localhost.key -out /etc/h2o/ssl/localhost.csr
        # [root@localhost ~]# cp /etc/h2o/ssl/localhost.key /etc/h2o/ssl/localhost.key.org
        # [root@localhost ~]# openssl rsa -in /etc/h2o/ssl/localhost.key.org -out /etc/h2o/ssl/localhost.key
        # [root@localhost ~]# openssl x509 -req -days 36500 -in /etc/h2o/ssl/localhost.csr -signkey /etc/h2o/ssl/localhost.key -out /etc/h2o/ssl/localhost.crt
        certificate-file: /etc/h2o/ssl/localhost.crt
        key-file: /etc/h2o/ssl/localhost.key
        cipher-preference: server
        cipher-suite: ECDHE-RSA-CHACHA20-POLY1305:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA
        #cipher-suite: ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-ECDSA-AES256-SHA:ECDHE-ECDSA-AES128-SHA
        minimum-version: TLSv1.2

    paths:
      "/":
        file.dir: /etc/h2o/html

        ### Access Log Directives ###
        # https://h2o.examp1e.net/configure/access_log_directives.html#access-log
        access-log:
          path: /etc/h2o/logs/localhost-access.log
          # Custom
          #format: "%h %l %u %t \"%r\" %>s %b"

# fastcgi.localhost
#hosts:
#  "fastcgi.localhost":
#    paths:
#      "/":
#        file.dir: /etc/h2o/html
#
#        ### Access Log Directives ###
#        # https://h2o.examp1e.net/configure/access_log_directives.html#access-log
#        access-log:
#          path: /etc/h2o/logs/fastcgi.localhost-access.log
#          # Custom
#          #format: "%h %l %u %t \"%r\" %>s %b"
#
#        # FastCGI
#        # fastcgi.connect (path, extension)
#        # https://h2o.examp1e.net/configure/fastcgi_directives.html#fastcgi.connect
#        # The directive specifies the address at where the FastCGI daemon is running.
#        # If the argument is a scalar, the value is considered as the path to a unix socket.
#        # Following properties are recognized if the argument is a mapping.
#        #-------------------------------------------------------------------------------------------
#        # host: name (or IP address) of the server running the FastCGI daemon (ignored if type is unix)
#        # port: TCP port number or path to the unix socket
#        # type: either tcp (default) or unix
#        #-------------------------------------------------------------------------------------------
#        fastcgi.connect:
#          host: localhost
#
#            port: 9000
#            #port: /tmp/php5-fpm.sock
#
#            type: tcp
#            #type: unix

# proxy.localhost
hosts:
  "proxy.localhost":
    paths:
      "/":
        ### Proxy Directives ###
        # proxy reverse url (path)
        # https://h2o.examp1e.net/configure/proxy_directives.html#proxy.reverse.url
        proxy.reverse.url: "http://127.0.0.1:8080/"

        # proxy preserve host (global, host, path)
        # https://h2o.examp1e.net/configure/proxy_directives.html#proxy.preserve-host
        # A boolean flag (ON or OFF) designating whether or not to pass Host header from incoming request to upstream.
        # proxy.preserve-host: OFF

        # proxy timeout io (global, host, path)
        # https://h2o.examp1e.net/configure/proxy_directives.html#proxy.timeout.io
        # Sets the upstream I/O timeout in milliseconds.
        proxy.timeout.io: 5000

        # proxy timeout keepalive (global, host, path)
        # https://h2o.examp1e.net/configure/proxy_directives.html#proxy.timeout.keepalive
        # Sets the upstream timeout for idle connections in milliseconds.
        # Upstream connection becomes non-persistent if the value is set to zero.
        # The value should be set to something smaller than that being set at the upstream server.
        proxy.timeout.keepalive: 2000

        ### Reproxy Directives ###
        # reproxy (path)
        # A boolean flag (ON or OFF) indicating if the server should recognize the X-Reproxy-URL header sent from upstream servers.
        # If H2O recognizes the header, it fetches the contents of the resource specified by the header, and sends the contents as the response to the client.
        # For example, an upstream server may send an URL pointing to a large image using the X-Reproxy-URL header stored on a distributed file system,
        # and let H2O fetch and return the content to the client, instead of fetching the image by itself. Doing so would reduce the load on the application server.
        reproxy: OFF
